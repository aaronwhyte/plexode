=== SPRINTS ===

The Zombie Problem
When you create creatures from nothing, you can't expect them to always
turn out perfectly. Some are hideous monsters. But you love them as best
you can, because they are yours and you are a good entity. But you need
to set limits or they'll run wild. And limits must be clear. And they
must include concequences. And sometimes you can't give each of your
creatures the individual attention and guidance you would like to. So
you begin to deal in policy, broad strokes, blanket judgements. Maybe
you automate the application of discipline a little. Maybe the tools
you have to do so aren't perfect, but who is.
Long story short, these plasma turrets indicate the boundaries of
acceptable zombie behavior. On sight. With deadly plasma.
v Zombie
  v avoids stuff
    v inert things
    v zappers!
  v chases player
  v kills player
  v dies in zapper
    v slice DeadPlayerSprite system into chunks
      x camera behavior - stay in a place, or follow a sprite
      v explosion painter (not sprite)
      v player re-assembly timeout
    v tractor beams release grip on removed sprites
v Anti-Zombie Turret
  v basic sprite
  v painter
  v rayscan behavior
  v color change when zombie detected, before we start throwing plasma around...
  v wall-sticker-thing for Ved
  v we're gonna need some plasma!
    v plasma sprite
    v plasma painter - finally get to use the events trail!
    v vorp.firePlasma(px, py, vx, vy);
    v plasma collision behavior vs player, zombies, and other masses
    x plasma factory?
      x plasma sprite pool
      x plasma painter pool
- Zombie Assembler

Plasma Bomb

Plasma Beamer
Plasma Switch

Drone

Plasma Blaster

HandHold
Repulsor


OneTimeSwith (pulsebutton + infinite timer)
OnOffSwitch (pulsebutton + toggle)
PulseButton (what we have today)

- Telltale
v Not
- And
- Edge
- Random

Milestone: More Levels!

===================================================================================

Sound
WebAudio has panners and stuff for positional audio. Use it.
singer.js is like painter.js. Vorp has all the singers, even if the sprites fire and forget.
v Things bumping into things
  - blocks and walls: tap!
v teleport
- Birth
- Death
- reaching to grab stuff
- grab
- stiff grip
- release
- beam break
- throw
- thrust
- button press
- gripper grab/release
- door open/close
- zapper on/off

Graphics
Learn some WebGL

Portal tweaks
- They push away from teleport-blocking objects so they're unobstructed.
- While they ARE obstructed they kind of show it
- They do something cool when something teleports
- They're clearly teleporters and not blocks or something. Hypersquare thing?

Player tweaks
- Put a little meh-face on it with eyes that move!
- Better death animations, depending on the manner of doom.
- Better assembly animation.
  - How about a little tree grows
  - and bears player as fruit
  - before disintegrating?

Exit tweaks
- look good before touch
- exit warp animation

Rendering performance improvements
- Prerender all immovable chunks like walls, and copy that out?

Background
- Starfield? Texture? Buildings?

Milestone: Production values go from "craptacular" to "weird retro vibe".

===================================================================================

